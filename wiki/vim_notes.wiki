= Surrounding stuff =
| Old text              | Command | New text                  |
|-----------------------+---------+---------------------------|
| "Hello *world!"       | ds"     | Hello world!              |
| [123+4*56]/2          | cs])    | (123+456)/2               |
| "Look ma, I'm *HTML!" | cs"<q>  | <q>Look ma, I'm HTML!</q> |
| if *x>3 {             | ysW(    | if ( x>3 ) {              |
| my $str = *whee!;     | vlllls' | my $str = 'whee!';        |
| *hello world          | v2ws"   | "hello world"             |

= Select a python or otherwise indented block block vii =
vii will select the contents of the innermost block
vai will also select the start of the block

Leaves in VISUAL mode with the text selected.

= Select a ruby block vir =
vir will select the contents of the innermost block
var will also select the start / end of the block

Leaves in VISUAL mode with the text selected.

= Select Inside vi" =
vi" vi( vi[ vi< etc, to select text inside something. 
va" va( va[ va< etc, to select the delimiter as well.

Leaves in VISUAL mode with the text selected.

= Change Inside: ci" =
ci" ci( ci[ ci< etc, to replace text inside something. 
ca" ca( ca[ ca< etc, to replace the delimiter as well.

Leaves in INSERT mode with cursor between the containing marks.

= Delete Inside: di" =
di" di( di[ di< etd, to delete text inside something. 
da" da( da[ da< etd, to delete the delimiter as well

Leaves in NORMAL mode with cursor on the last containing mark.

= Change Inside Tag: cit =
cit to replace text inside a xml/html tag
cat to replace the tag as well.

Laves in INSERT mode with cursor between the tags.

= Delete Inside Tag: cit =
dit to delete text inside a xml/html tag
dat to delete the tag as well.

Laves in NORMAL mode with cursor at the start of the closing tag.

= Macros =

# qN to start recording
# a string of editing commands
# q to stop recording
# @q to replay the macro

= Marks =

# Set a mark with mn (where n is pretty much any key)
# Goto a mark with 'n (where n is the key you used when setting it)
# ,mt To toggle showmarks on and off.
# ,mm To add the next available mark.
# ,mh To clear the current mark.
# ,ma To clear all marks in the current buffer

= Running Commands =
# to run a command :!command
# to run a command and put the output in the current buffer, :.!command

