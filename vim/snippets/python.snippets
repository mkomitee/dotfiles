snippet module
	'''
	${1:Module Documentation}
	'''

	from __future__ import print_function
	from __future__ import division
	from __future__ import absolute_import
	from __future__ import unicode_literals

	import logging

	LOG = logging.getLogger(__name__)


	${2:# TODO: write code...}


	if __name__ == '__main__':
		pass
snippet script
	#!/usr/bin/env python
	'''Usage: ${1:program} [-v | -vv] ${2}
		   $1 -h | --help
		   $1 --version

	Options:
		-h --help          Show this screen.
		--version          Show version.    
		-v --verbose       Increase verbosity
		${3}
	'''
	from __future__ import print_function
	from __future__ import division
	from __future__ import absolute_import
	from __future__ import unicode_literals

	import docopt
	import logging
	import os
	import sys

	LOG = logging.getLogger(__name__)
	__prog__ = '$1'
	__version__ = '1.0.0'


	def main():
		'''
		Main program logic
		'''
		args = docopt.docopt(__doc__, version='%s %s' % (__prog__, __version__))
		${4:# TODO: write code...}
		return 0

	if __name__ == '__main__':
		sys.exit(main())
snippet oneoff
	#!/usr/bin/env python
	from __future__ import print_function
	from __future__ import division
	from __future__ import absolute_import
	from __future__ import unicode_literals

	import logging
	import os
	import sys

	LOG = logging.getLogger(__name__)


	def main():
		${1:# TODO: write code...}

	if __name__ == '__main__':
		main()
