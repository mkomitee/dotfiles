#!/usr/local/bin/python
import numpy
import sys


def getTerminalSize():
    import os
    env = os.environ
    def ioctl_GWINSZ(fd):
        try:
            import fcntl, termios, struct, os
            cr = struct.unpack('hh', fcntl.ioctl(fd, termios.TIOCGWINSZ,
        '1234'))
        except:
            return
        return cr
    cr = ioctl_GWINSZ(0) or ioctl_GWINSZ(1) or ioctl_GWINSZ(2)
    if not cr:
        try:
            fd = os.open(os.ctermid(), os.O_RDONLY)
            cr = ioctl_GWINSZ(fd)
            os.close(fd)
        except:
            pass
    if not cr:
        cr = (env.get('LINES', 25), env.get('COLUMNS', 80))

        ### Use get(key[, default]) instead of a try/catch
        try:
           cr = (env['LINES'], env['COLUMNS'])
        except:
           cr = (25, 80)
    return int(cr[1]), int(cr[0])

width = getTerminalSize()[0]
print(width)
raw = numpy.array([float(l.strip()) for l in sys.stdin.readlines()])
data = dict(
    samples=len(raw), mean=raw.mean(), max=raw.max(), min=raw.min(),
    std=raw.std()
)
print '''Samples:              {samples:19}
Mean:                 {mean:19.2f}
Max:                  {max:19.2f}
Min:                  {min:19.2f}
Standard Deviation:   {std:19.2f}'''.format(**data)

try:
    nbins = int(sys.argv[1])
except IndexError:
    nbins = 10
total = 0
N, bins = numpy.histogram(raw, nbins, range=(raw.min(), raw.max()))
for n in range(len(bins)-1):
    samples = N[n]
    total += samples
    low = '{0:.2f}'.format(bins[n])
    high = '{0:.2f}'.format(bins[n+1])
    pct = 100 * samples / data['samples']
    pct_thus_far = 100 * total / data['samples']
    info = "{0!s:>4} ({3!s:>3}%) samples in bin [{1!s:>5}, {2!s:>5}] ({4!s:>3}% <= {2!s:>5})".format(
        samples,
        low,
        high,
        pct,
        pct_thus_far,
    )
    remaining = width - len(info) - 3
    if remaining > 100:
        remaining = 100
    if remaining > 1:
        bar = int(pct / 100.0 * remaining) * '='
        print "{0} |{1!s:<{2}}|".format(info, bar, remaining)
    else:
        print info


