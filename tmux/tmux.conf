#  Cheat Sheet:
#    C-a C-a:     next panel
#    C-a C-o:     rotate panels
#    C-a <up>:    resize panel up 1
#    C-a <down>:  resize panel down 1
#    C-a <left>:  resize panel left 1
#    C-a <right>: resize panel right 1
#    C-a <space>: next panel orientation
#    C-a |:       split panel vertically
#    C-a -:       split panel horizontally
#    C-a w:       list window
#    C-a c:       new window
#    C-a n:       next window
#    C-a h:       move focus left one panel
#    C-a j:       move focus down one panel
#    C-a k:       move focus up one panel
#    C-a l:       move focus right one panel
#    C-a [:       enter copy mode
#    C-a ]:       paste copied text
#    C-a d:       detach
#
#  When in copy mode:
#    <space> to start selection
#    <enter> to copy selection and exit copy mode
#
#  To create a vertically split window taking up 75% of the screen:
#       C-a :split-window -h -p 75

set-option -g default-terminal "screen-256color"

# Mouse stuff 
set-option -g mouse-resize-pane off
set-option -g mouse-select-pane off
set-option -g mouse-select-window off
set-option -g mode-mouse off
set-option -g mouse-utf off

set-option -g visual-activity on
set-window-option -g monitor-activity on
set-window-option -g automatic-rename on

set-option -sg escape-time 0
set-option -sg repeat-time 600

# Try to work with the clipboard
set-option -g set-clipboard on

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \;  display "Reloaded!"

# quick pane cycling
unbind ^A
bind-key -r H select-pane -t :.-
bind-key -r J select-pane -t :.-
bind-key -r L select-pane -t :.+
bind-key -r K select-pane -t :.+

# hsplit
unbind %
bind | split-window -h

# vsplit
unbind '"'
bind _ split-window -v

# panel navigation
unbind k
bind-key k select-pane -U
unbind j
bind-key j select-pane -D
unbind h
bind-key h select-pane -L
unbind l
bind-key l select-pane -R

# vi all the things
set-window-option -g mode-keys vi
set-option -g status-keys vi

# bind C-c run "tmux show-buffer | xsel -i"
# bind C-v run "tmux set-buffer \"$(xsel -o)\"; tmux paste-buffer"

# Kill window
unbind ^x
bind ^x confirm-before "kill-pane"

# Tile windows
unbind =
bind = select-layout tiled

# Resize windows
unbind right
bind -r right resize-pane -R 2
unbind left
bind -r left resize-pane -L 2
unbind up
bind -r up resize-pane -U 2
unbind down
bind -r down resize-pane -D 2

# Customize colors
set-window-option -g window-status-current-bg colour237
set-window-option -g window-status-current-fg yellow
set-window-option -g window-status-bell-bg colour237
set-window-option -g window-status-bell-fg colour110
set-window-option -g pane-border-fg colour237

set-option -g message-bg black
set-option -g message-fg yellow
set-option -g message-command-bg black
set-option -g message-command-fg yellow

set-option -g status-bg colour237
set-option -g status-fg white

# Highlight current pane
set-window-option -g pane-active-border-fg colour52

# Customize status
set-option -g status-left '#[fg=colour110]#S.#I.#P#[default]'
set-option -g status-right '#[fg=colour110,bold]%Y-%m-%d %H:%M:%S#[default]'

# Customize window title (not tmux window, but xterm/putty)
set-option -g set-titles on
set-option -g set-titles-string '#S - window ###I pane ###P'

# Number windows starting at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Limit window size based on the smallest client viewing that window
# ordinarily it's limited by the smallest client attached, regardless
# of which window is being viewed.
set-window-option -g aggressive-resize on 

bind-key -n M-Right next-window
bind-key -n M-Left previous-window

# Copy & Paste
# Enter copy mode with ESC
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy Escape cancel

# + / - will maximize/minimize current pane
bind + new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
bind - last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# P will log output to a file
bind P pipe-pane  -o "cat >>~/#S-#W.log" \; display "Toggled Logging to ~/#S-#W.log"

bind c new-window \; rename-window 'unnamed'
bind , command-prompt "rename-window '%%'"

# Here's where we place local overrides. This includes prefix overrides
source-file ~/.tmux.local

## vim:set ft=tmux:
